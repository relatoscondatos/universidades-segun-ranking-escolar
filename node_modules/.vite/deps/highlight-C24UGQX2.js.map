{
  "version": 3,
  "sources": ["../../@observablehq/notebook-kit/dist/src/runtime/stdlib/highlight.js"],
  "sourcesContent": ["import { highlightCode, tagHighlighter, tags } from \"@lezer/highlight\";\n// A subset of classHighlighter with the classes weâ€™ve styled.\n// Please keep in sync with src/codemirror/highlight.ts\n// https://github.com/lezer-parser/highlight/blob/95aa69ecd22bfc8b3e1c793610e0d5cda1174e61/src/highlight.ts#L702\nexport const highlighter = tagHighlighter([\n    { tag: tags.link, class: \"tok-link\" },\n    { tag: [tags.heading, tags.strong], class: \"tok-strong\" },\n    { tag: tags.emphasis, class: \"tok-emphasis\" },\n    { tag: [tags.keyword, tags.typeName], class: \"tok-keyword\" },\n    { tag: tags.atom, class: \"tok-atom\" },\n    { tag: [tags.bool, tags.escape, tags.number], class: \"tok-literal\" },\n    { tag: [tags.string, tags.regexp], class: \"tok-string\" },\n    { tag: tags.comment, class: \"tok-comment\" },\n    { tag: tags.invalid, class: \"tok-invalid\" },\n    { tag: tags.variableName, class: \"tok-variable\" },\n    { tag: [tags.definition(tags.variableName), tags.className, tags.propertyName], class: \"tok-definition\" },\n    { tag: tags.meta, class: \"tok-meta\" }\n]);\nexport async function highlight(code) {\n    const language = getLanguage(code);\n    if (!language)\n        return;\n    const parent = code.parentElement;\n    if (parent)\n        parent.dataset.language = language;\n    const parser = await getParser(language);\n    if (!parser)\n        return;\n    const document = code.ownerDocument;\n    const text = code.textContent;\n    const tree = parser.parse(text);\n    while (code.lastChild)\n        code.lastChild.remove();\n    function emit(text, classes) {\n        let node = document.createTextNode(text);\n        if (classes) {\n            const span = document.createElement(\"span\");\n            span.appendChild(node);\n            span.className = classes;\n            node = span;\n        }\n        code.appendChild(node);\n    }\n    function emitBreak() {\n        code.appendChild(document.createTextNode(\"\\n\"));\n    }\n    highlightCode(text, tree, highlighter, emit, emitBreak);\n}\nasync function getParser(language) {\n    switch (language) {\n        case \"node\":\n            language = \"ts\";\n            break;\n    }\n    switch (language) {\n        case \"js\":\n        case \"ts\":\n        case \"jsx\":\n            return (await import(\"@lezer/javascript\")).parser.configure({ dialect: language });\n        case \"python\":\n            return (await import(\"@lezer/python\")).parser;\n        case \"html\":\n            return (await import(\"@lezer/html\")).parser;\n        case \"css\":\n            return (await import(\"@lezer/css\")).parser;\n        case \"md\":\n            return (await import(\"@lezer/markdown\")).parser;\n    }\n}\nfunction getLanguage(code) {\n    const language = [...code.classList]\n        .find((c) => c.startsWith(\"language-\"))\n        ?.slice(\"language-\".length)\n        ?.toLowerCase();\n    switch (language) {\n        case \"javascript\":\n            return \"js\";\n        case \"typescript\":\n            return \"ts\";\n        case \"py\":\n            return \"python\";\n        case \"markdown\":\n            return \"md\";\n    }\n    return language;\n}\n"],
  "mappings": ";;;;;;;;AAIO,IAAM,cAAc,eAAe;AAAA,EACtC,EAAE,KAAK,KAAK,MAAM,OAAO,WAAW;AAAA,EACpC,EAAE,KAAK,CAAC,KAAK,SAAS,KAAK,MAAM,GAAG,OAAO,aAAa;AAAA,EACxD,EAAE,KAAK,KAAK,UAAU,OAAO,eAAe;AAAA,EAC5C,EAAE,KAAK,CAAC,KAAK,SAAS,KAAK,QAAQ,GAAG,OAAO,cAAc;AAAA,EAC3D,EAAE,KAAK,KAAK,MAAM,OAAO,WAAW;AAAA,EACpC,EAAE,KAAK,CAAC,KAAK,MAAM,KAAK,QAAQ,KAAK,MAAM,GAAG,OAAO,cAAc;AAAA,EACnE,EAAE,KAAK,CAAC,KAAK,QAAQ,KAAK,MAAM,GAAG,OAAO,aAAa;AAAA,EACvD,EAAE,KAAK,KAAK,SAAS,OAAO,cAAc;AAAA,EAC1C,EAAE,KAAK,KAAK,SAAS,OAAO,cAAc;AAAA,EAC1C,EAAE,KAAK,KAAK,cAAc,OAAO,eAAe;AAAA,EAChD,EAAE,KAAK,CAAC,KAAK,WAAW,KAAK,YAAY,GAAG,KAAK,WAAW,KAAK,YAAY,GAAG,OAAO,iBAAiB;AAAA,EACxG,EAAE,KAAK,KAAK,MAAM,OAAO,WAAW;AACxC,CAAC;AACD,eAAsB,UAAU,MAAM;AAClC,QAAM,WAAW,YAAY,IAAI;AACjC,MAAI,CAAC;AACD;AACJ,QAAM,SAAS,KAAK;AACpB,MAAI;AACA,WAAO,QAAQ,WAAW;AAC9B,QAAM,SAAS,MAAM,UAAU,QAAQ;AACvC,MAAI,CAAC;AACD;AACJ,QAAM,WAAW,KAAK;AACtB,QAAM,OAAO,KAAK;AAClB,QAAM,OAAO,OAAO,MAAM,IAAI;AAC9B,SAAO,KAAK;AACR,SAAK,UAAU,OAAO;AAC1B,WAAS,KAAKA,OAAM,SAAS;AACzB,QAAI,OAAO,SAAS,eAAeA,KAAI;AACvC,QAAI,SAAS;AACT,YAAM,OAAO,SAAS,cAAc,MAAM;AAC1C,WAAK,YAAY,IAAI;AACrB,WAAK,YAAY;AACjB,aAAO;AAAA,IACX;AACA,SAAK,YAAY,IAAI;AAAA,EACzB;AACA,WAAS,YAAY;AACjB,SAAK,YAAY,SAAS,eAAe,IAAI,CAAC;AAAA,EAClD;AACA,gBAAc,MAAM,MAAM,aAAa,MAAM,SAAS;AAC1D;AACA,eAAe,UAAU,UAAU;AAC/B,UAAQ,UAAU;AAAA,IACd,KAAK;AACD,iBAAW;AACX;AAAA,EACR;AACA,UAAQ,UAAU;AAAA,IACd,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACD,cAAQ,MAAM,OAAO,oBAAmB,GAAG,OAAO,UAAU,EAAE,SAAS,SAAS,CAAC;AAAA,IACrF,KAAK;AACD,cAAQ,MAAM,OAAO,oBAAe,GAAG;AAAA,IAC3C,KAAK;AACD,cAAQ,MAAM,OAAO,oBAAa,GAAG;AAAA,IACzC,KAAK;AACD,cAAQ,MAAM,OAAO,oBAAY,GAAG;AAAA,IACxC,KAAK;AACD,cAAQ,MAAM,OAAO,oBAAiB,GAAG;AAAA,EACjD;AACJ;AACA,SAAS,YAAY,MAAM;AACvB,QAAM,WAAW,CAAC,GAAG,KAAK,SAAS,EAC9B,KAAK,CAAC,MAAM,EAAE,WAAW,WAAW,CAAC,GACpC,MAAM,YAAY,MAAM,GACxB,YAAY;AAClB,UAAQ,UAAU;AAAA,IACd,KAAK;AACD,aAAO;AAAA,IACX,KAAK;AACD,aAAO;AAAA,IACX,KAAK;AACD,aAAO;AAAA,IACX,KAAK;AACD,aAAO;AAAA,EACf;AACA,SAAO;AACX;",
  "names": ["text"]
}
